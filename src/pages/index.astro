---
import PageLayout from "@layouts/PageLayout.astro";
import { Icon } from "astro-icon/components";
import "../styles/index.css";
import { useTranslations } from "../i18n/utils";

const t = useTranslations("en");

const seo = {
	title: "Fishing Notebook - Το Ημερολόγιο του Ψαρά",
	description: "Καταγράψτε τις ψαρευτικές σας εμπειρίες",
	keywords: "fishing, ψάρεμα, fishing journal",
};
---

<PageLayout seo={seo}>
	<section class="flex min-h-screen items-center justify-center bg-gradient-to-br from-blue-50 to-cyan-50 px-4 py-12">
		<div class="w-full max-w-md">
			<!-- Logo/Brand -->
			<div class="mb-8 text-center">
				<h1 class="mb-2 text-4xl font-bold text-gray-900">🎣 Fishing Notebook</h1>
				<p class="text-gray-600">Το Ημερολόγιο του Ψαρά</p>
			</div>

			<!-- Auth Card -->
			<div class="overflow-hidden rounded-2xl bg-white shadow-xl">
				<!-- Tabs -->
				<div class="flex border-b border-gray-200">
					<button
						id="tab-signin"
						class="flex-1 cursor-pointer border-b-2 border-blue-600 py-4 text-center font-semibold text-blue-600 transition-colors"
						data-tab="signin">
						<!-- Σύνδεση -->
						Login
					</button>
					<button
						id="tab-signup"
						class="flex-1 cursor-pointer border-b-2 border-transparent py-4 text-center font-semibold text-gray-500 transition-colors hover:text-gray-700"
						data-tab="signup">
						<!-- Εγγραφή -->
						Signup
					</button>
				</div>

				<!-- Tab Content -->
				<div class="p-8">
					<!-- Sign In Form -->
					<form id="signin-form" class="space-y-6">
						<div>
							<label for="signin-email" class="mb-2 block text-sm font-medium text-gray-700">Email</label>
							<input
								type="email"
								id="signin-email"
								name="email"
								required
								class="w-full rounded-lg border border-gray-300 px-4 py-3 text-gray-600 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
								placeholder="your@email.com"
							/>
						</div>

						<div>
							<label for="signin-password" class="mb-2 block text-sm font-medium text-gray-700">
								Κωδικός
							</label>
							<input
								type="password"
								id="signin-password"
								name="password"
								required
								minlength="8"
								class="w-full rounded-lg border border-gray-300 px-4 py-3 text-gray-600 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
								placeholder="********"
							/>
						</div>

						<button
							type="submit"
							id="signin-btn"
							class="w-full cursor-pointer rounded-lg bg-blue-600 py-3 font-semibold text-white transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:bg-gray-400">
							<!-- Σύνδεση -->
							Login
						</button>
					</form>

					<!-- Sign Up Form -->
					<form id="signup-form" class="hidden space-y-6">
						<div>
							<label for="signup-name" class="mb-2 block text-sm font-medium text-gray-700">Όνομα</label>
							<input
								type="text"
								id="signup-name"
								name="name"
								required
								minlength="2"
								class="w-full rounded-lg border border-gray-300 px-4 py-3 text-gray-600 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
								placeholder="Το όνομά σας"
							/>
						</div>

						<div>
							<label for="signup-email" class="mb-2 block text-sm font-medium text-gray-700">Email</label>
							<input
								type="email"
								id="signup-email"
								name="email"
								required
								class="w-full rounded-lg border border-gray-300 px-4 py-3 text-gray-600 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
								placeholder="your@email.com"
							/>
						</div>

						<div>
							<label for="signup-password" class="mb-2 block text-sm font-medium text-gray-700">
								Κωδικός (τουλάχιστον 8 χαρακτήρες)
							</label>
							<input
								type="password"
								id="signup-password"
								name="password"
								required
								minlength="8"
								class="w-full rounded-lg border border-gray-300 px-4 py-3 text-gray-600 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
								placeholder="********"
							/>
						</div>

						<button
							type="submit"
							id="signup-btn"
							class="w-full rounded-lg bg-blue-600 py-3 font-semibold text-white transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:bg-gray-400">
							<!-- Εγγραφή -->
							Sign Up
						</button>
					</form>

					<!-- Messages -->
					<div
						id="error-message"
						class="mt-4 hidden rounded-lg border border-red-200 bg-red-50 px-4 py-3 text-sm text-red-700">
					</div>

					<div
						id="success-message"
						class="mt-4 hidden rounded-lg border border-green-200 bg-green-50 px-4 py-3 text-sm text-green-700">
					</div>
				</div>
			</div>

			<!-- Footer -->
			<p class="mt-6 text-center text-sm text-gray-600">
				Καταγράψτε κάθε ψάρεμα, ανακαλύψτε νέα σημεία, βελτιώστε την τεχνική σας
			</p>
		</div>
	</section>
</PageLayout>

<script>
	import { fromAction } from "svelte/attachments";

	const { signIn, signUp, signOut } = await import("../client-libs/auth");

	// Tab switching
	const tabSignin = document.getElementById("tab-signin") as HTMLButtonElement;
	const tabSignup = document.getElementById("tab-signup") as HTMLButtonElement;
	const signinForm = document.getElementById("signin-form") as HTMLFormElement;
	const signupForm = document.getElementById("signup-form") as HTMLFormElement;
	const errorMessage = document.getElementById("error-message") as HTMLDivElement;
	const successMessage = document.getElementById("success-message") as HTMLDivElement;

	function switchTab(tab: "signin" | "signup") {
		// Hide messages
		errorMessage.classList.add("hidden");
		successMessage.classList.add("hidden");

		if (tab === "signin") {
			tabSignin.classList.add("border-blue-600", "text-blue-600");
			tabSignin.classList.remove("border-transparent", "text-gray-500");
			tabSignup.classList.remove("border-blue-600", "text-blue-600");
			tabSignup.classList.add("border-transparent", "text-gray-500");
			signinForm.classList.remove("hidden");
			signupForm.classList.add("hidden");
		} else {
			tabSignup.classList.add("border-blue-600", "text-blue-600");
			tabSignup.classList.remove("border-transparent", "text-gray-500");
			tabSignin.classList.remove("border-blue-600", "text-blue-600");
			tabSignin.classList.add("border-transparent", "text-gray-500");
			signupForm.classList.remove("hidden");
			signinForm.classList.add("hidden");
		}
	}

	tabSignin.addEventListener("click", () => switchTab("signin"));
	tabSignup.addEventListener("click", () => switchTab("signup"));

	// Sign In Handler
	const signinBtn = document.getElementById("signin-btn") as HTMLButtonElement;
	signinForm.addEventListener("submit", async e => {
		e.preventDefault();

		errorMessage.classList.add("hidden");
		successMessage.classList.add("hidden");

		signinBtn.disabled = true;
		signinBtn.textContent = "Loading...";

		try {
			const formData = new FormData(signinForm);
			await signIn.email(
				{
					email: formData.get("email") as string,
					password: formData.get("password") as string,
				},
				{
					onRequest: () => {
						signinBtn.disabled = true;
						signinBtn.textContent = "Loading...";
					},
					onSuccess: () => {
						successMessage.textContent = "Επιτυχής σύνδεση! Ανακατεύθυνση...";
						// window.location.href = "/dashboard";
						successMessage.classList.remove("hidden");
					},
					onError: () => {
						errorMessage.textContent = "Σφάλμα κατά τη σύνδεση";
						errorMessage.classList.remove("hidden");
					},
					// This doesn't seem to be the case ever
					onComplete: () => {
						signinBtn.disabled = false;
						signinBtn.textContent = "Σύνδεση";
					},
				}
			);
			await signOut();
		} catch {
			errorMessage.textContent = "Σφάλμα κατά τη σύνδεση";
			errorMessage.classList.remove("hidden");

			signinBtn.disabled = false;
			signinBtn.textContent = "Σύνδεση";
		}
	});

	// Sign Up Handler
	const signupBtn = document.getElementById("signup-btn") as HTMLButtonElement;
	signupForm.addEventListener("submit", async e => {
		e.preventDefault();

		errorMessage.classList.add("hidden");
		successMessage.classList.add("hidden");

		signupBtn.disabled = true;
		signupBtn.textContent = "Loading...";

		try {
			const formData = new FormData(signupForm);
			const email = formData.get("email");
			const password = formData.get("password");
			const name = formData.get("name");
			const image = formData.get("image");
			const { data, error } = await signUp.email(
				{
					email: `${email ?? ""}`,
					password: `${password ?? ""}`, // user password -> min 8 characters by default
					name: `${name ?? ""}`, // user display name
					image: `${image ?? ""}`, // User image URL (optional)
				},
				{
					onRequest: ctx => {
						//show loading
						signupBtn.textContent = "Loading...";
					},
					onSuccess: ctx => {
						//redirect to the dashboard or sign in page
					},
					onError: ctx => {
						// display the error message
						alert(ctx.error.message);
					},
				}
			);

			if (error) {
				throw new Error(error.message);
			}

			successMessage.textContent = "Επιτυχής εγγραφή! Ανακατεύθυνση...";
			successMessage.classList.remove("hidden");

			setTimeout(() => {
				window.location.href = "/dashboard";
			}, 1500);
		} catch (error: any) {
			errorMessage.textContent = error.message || "Σφάλμα κατά την εγγραφή";
			errorMessage.classList.remove("hidden");

			signupBtn.disabled = false;
			signupBtn.textContent = "Εγγραφή";
		}
	});
</script>
