---

---

<!-- Sign In Form -->
<form id="signin-form" class="space-y-6">
	<div>
		<label for="signin-email" class="mb-2 block text-sm font-medium text-gray-300">Email</label>
		<input
			type="email"
			id="signin-email"
			name="email"
			required
			class="w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-3 text-gray-200 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
			placeholder="your@email.com"
		/>
	</div>

	<div>
		<label for="signin-password" class="mb-2 block text-sm font-medium text-gray-300">Κωδικός</label>
		<input
			type="password"
			id="signin-password"
			name="password"
			required
			minlength="8"
			class="w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-3 text-gray-200 transition-shadow focus:border-transparent focus:ring-2 focus:ring-blue-500"
			placeholder="********"
		/>
	</div>

	<button
		type="submit"
		id="signin-btn"
		class="w-full cursor-pointer rounded-lg bg-blue-600 py-3 font-semibold text-white transition-colors hover:bg-blue-700 disabled:cursor-not-allowed disabled:bg-gray-600">
		<!-- Σύνδεση -->
		Login
	</button>
</form>

<script>
	const { signIn } = await import("../../client-libs/auth");

	// Tab switching
	const signinForm = document.getElementById("signin-form") as HTMLFormElement;
	const errorMessage = document.getElementById("error-message") as HTMLDivElement;
	const successMessage = document.getElementById("success-message") as HTMLDivElement;

	// Sign In Handler
	const signinBtn = document.getElementById("signin-btn") as HTMLButtonElement;
	signinForm.addEventListener("submit", async e => {
		e.preventDefault();

		errorMessage.classList.add("hidden");
		successMessage.classList.add("hidden");

		signinBtn.disabled = true;
		signinBtn.textContent = "Loading...";

		try {
			const formData = new FormData(signinForm);
			await signIn.email(
				{
					email: formData.get("email") as string,
					password: formData.get("password") as string,
				},
				{
					onRequest: () => {
						signinBtn.disabled = true;
						signinBtn.textContent = "Loading...";
					},
					onSuccess: () => {
						successMessage.textContent = "Επιτυχής σύνδεση! Ανακατεύθυνση...";
						window.location.href = "/dashboard";
						successMessage.classList.remove("hidden");
					},
					onError: () => {
						errorMessage.textContent = "Σφάλμα κατά τη σύνδεση";
						errorMessage.classList.remove("hidden");
					},
					// This doesn't seem to be the case ever
					onComplete: () => {
						signinBtn.disabled = false;
						signinBtn.textContent = "Σύνδεση";
					},
				}
			);
		} catch {
			errorMessage.textContent = "Σφάλμα κατά τη σύνδεση";
			errorMessage.classList.remove("hidden");

			signinBtn.disabled = false;
			signinBtn.textContent = "Σύνδεση";
		}
	});
</script>
